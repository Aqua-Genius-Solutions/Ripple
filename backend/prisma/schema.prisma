generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://root:rAjdVxvQihwqnR2w0zLH5PM1CqFO90oE@dpg-chsfo2grddl1j5vqcfgg-a.oregon-postgres.render.com/ripple"
}

model User {
  name                          String
  surname                       String
  email                         String
  address                       String
  isPro                         Boolean
  Referrals                     Int[]
  Bubbles                       Int
  isAdmin                       Boolean
  uid                           String       @id @default("0")
  Image                         String
  NFM                           Int
  NormalConsp                   Int
  bills                         Bill[]       @relation("UserBills")
  creditCards                   CreditCard[]
  LikedEvents                   Events[]     @relation("UserLikedEvents")
  LikedNews                     News[]       @relation("UserLikedNews")
  Events_UserParticipatedEvents Events[]     @relation("UserParticipatedEvents")
}

model Events {
  id                          Int      @id @default(autoincrement())
  link                        String
  date                        DateTime
  image                       String
  title                       String
  LikedBy                     User[]   @relation("UserLikedEvents")
  User_UserParticipatedEvents User[]   @relation("UserParticipatedEvents")
}

model News {
  id          Int       @id @default(autoincrement())
  id          Int       @id @default(autoincrement())
  author      String
  description String
  link        String
  date        DateTime
  image       String
  Comment     Comment[]
  LikedBy     User[]    @relation("UserLikedNews")
}

model Rewards {
  id          Int    @id @default(autoincrement())
  name        String
  price       Int
  image       Int
  description String
}

model CreditCard {
  id      Int      @id @default(autoincrement())
  number  String   @db.VarChar(16)
  CVC     Int
  expDate DateTime
  ownerId String
  balance Int
  balance Int
  owner   User     @relation(fields: [ownerId], references: [uid])
}

model Bill {
  id          Int      @id @default(autoincrement())
  price       Decimal
  price       Decimal
  consumption Int
  paid        Boolean
  startDate   DateTime
  endDate     DateTime
  userId      String
  imageUrl    String
  imageUrl    String
  imageUrl    String
  User        User     @relation(fields: [userId], references: [uid])
}

model Comment {
  id      Int    @id @default(autoincrement())
  content String
  author  String
  newsId  Int
  News    News   @relation(fields: [newsId], references: [id])
}

model User {
  name                          String
  surname                       String
  email                         String
  address                       String
  isPro                         Boolean
  Referrals                     Int[]
  Bubbles                       Int
  isAdmin                       Boolean
  uid                           String       @id @default("0")
  Image                         String
  NFM                           Int
  NormalConsp                   Int
  Bill                          Bill[]
  CreditCard                    CreditCard[]
  Events_UserLikedEvents        Events[]     @relation("UserLikedEvents")
  News                          News[]       @relation("UserLikedNews")
  Events_UserParticipatedEvents Events[]     @relation("UserParticipatedEvents")
}
